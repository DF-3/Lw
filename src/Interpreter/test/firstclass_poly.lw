(*
 * Lw test program
 * (c) 2014, 2015 Alvise Spano'
 *)

namespace Test 

let annot f x y = ((f : 'a -> 'a) x, y) : _ * int

(*let f x = match x with 1 -> true

let rec map f = function
    | [] -> []
    | x :: xs -> f x :: map f xs

let id x = x
*)

(*
let app f x = f x

let i = app id id

let x = app id 3

let revapp x f = f x

let comb (id : forall 'a. 'a -> 'a) = id id

let poly (f : forall 'a. 'a -> 'a) = f 1, f true

let a = poly id
*)

